- 과제
1. //앙상블 3번 튠!

항상 shape를 출력해보장

np.transpose(x) : x의 행렬을 바꿔준다.
x.transpose() : x의 행렬을 바꿔준다.

행무시 열우선 => column 중요 컬럼,특성,피쳐(Feature),열


input_shape : Dense층에서 입력노드를 만들 때 사용된다
model.add(Dense(10,input_dim=3)) == model.add(Dense(10,input_shape=(3, )))
 (100,10,3) -> input_shape=(10,3) 
    행무시(전체데이터량 무시)


verbose : model.fit()에 사용된다. default = 1
	0 = silent : progress 출력안함
	1 = progress bar :  전체출력 
	2 = one line per epoch. : progress bar 미출력
	3이상 = epoch만 출력

함수형 모델 : 함수의 사용 목적 = 재사용, 다중이용(섞어서 사용)
	    : from tensorflow.keras.models import Model 로 사용준비
                : from tensorflow.keras.layers import Input  input레이어가 따로 필요
                : Functional Model

Sequential : 모델구성 시작지점 선언한 뒤 add로 역음
              : model = Sequential()
함수형모델 : 모델구성 마지막에 선언해준다.
              : from tensorflow.keras.models import Model 을 사용한다.
              : from tensorflow.keras.layers import Input 입력부에 사용된다.
	  : model = Model(inputs=input1,outputs=output1)
              : layer를 다 만든 뒤 input 과 output을 Model에 적용시킨다.

model.summary() : 현재 모델을 summary해준다.
                      : output_shape : layer의 노드숫자, 아웃풋 갯수
                      : Param : (노드수 * input 차원수)(w계산) + 노드수(bias 계산)
                      : 인풋에 bias노드가 추가된 것처럼 계산된다.                        

activation(활성화함수) : 가중치 계산할 때 너무 큰값이나 작은값을 걸러준다.
                            : 가중치를 조정해주기 위해서 활성화함수를 사용한다.
                            : 모든 레이어마다 디폴트가 있다. 
                            : relu를 자주사용한다.
                            : Dense층에서는 'linear'가 default값이다.
                            : output레이어에선 무조건 linear을 사용해야한다.
relu : 값을 전달할 때 값을 보정해줌
linear : 최종에서만 사용

앙상블모델(Ensemble) : 어떤 데이터의 값을 예측한다고 할 때, 
                            : 하나의 모델을 활용합니다. 
                            : 하지만 여러 개의 모델을 조화롭게 학습시켜 
                            : 그 모델들의 예측 결과들을 이용한다면 
                            : 더 정확한 예측값을 구할 수 있을 겁니다.
                            : from tensorflow.keras.layers import concatenate,Concatenate

모델 정의 : model = Model(inputs=input1,outputs=[output1, output2, output3])
            : 이런식으로 모델구성이 끝난 뒤 input,output을 정리해준다.



concatenate : merge = concatenate([output1,output2]) 
Concatenate : merge1 = Concatenate(axis=0)([output1,output2]) 
                : 생김새는 비슷해도 사용방법이 미묘하게 다르다.
axis : default=-1 : 0면 행을 , 1이면 열을 , -1 가장 낮은 차원 기준 병합

train_test_split의 옵션
stratify : class 비율(ratio)을 train / validation에 유지
random_state : default=None : 파라미터의 인트값을 보고 일정한 데이터셋을 유지한다.          







